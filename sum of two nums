#两数之和
class Solution:
    def twoSum(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: List[int]
        """
        new_nums = nums[:]
        for i in range(len(new_nums)):
            new_nums[i] = target - new_nums[i]
        two_num = list(set(nums).intersection(set(new_nums)))
        if len(two_num) == 1:
            first = nums.index(two_num[0])
            return [first, (nums.index(two_num[0], first+1))]
        elif len(two_num) ==2:
            first = nums.index(two_num[0])
            second =nums.index(two_num[1])
            if first > second:
                return [second, first]
            return [first, second]
        else:
            aa = target//2
            two_num.pop(two_num.index(aa))
            first = nums.index(two_num[0])
            second =nums.index(two_num[1])
            if first > second:
                return [second, first]
            return [first, second]
